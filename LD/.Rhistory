theme_few() +
theme(legend.position="none")
ggplot(data) +
geom_point(aes(Genes, Size, color = Color), size = 3) +
geom_text_repel(aes(Genes, Size, label = Short_name, size = 4, color = Color), size = 6) +
labs(x = "Number of genes (K)",
y = "Genome size (Mbp)") +
theme_bw() +
theme_few() +
theme(legend.position="none")
ggplot(data) +
geom_point(aes(Genes, Size, color = Color), size = 3) +
geom_text_repel(aes(Genes, Size, label = Short_name, size = 4, color = Color),
size = 6,
point.padding = 0.5) +
labs(x = "Number of genes (K)",
y = "Genome size (Mbp)") +
theme_bw() +
theme_few() +
theme(legend.position="none")
ggplot(data) +
geom_point(aes(Genes, Size, color = Color), size = 3) +
geom_text_repel(aes(Genes, Size, label = Short_name, size = 4, color = Color),
size = 6,
point.padding = 0.5) +
labs(x = "Number of genes (K)",
y = "Genome size (Mbp)",
size = 4) +
theme_bw() +
theme_few() +
theme(legend.position="none")
ggplot(data) +
geom_point(aes(Genes, Size, color = Color), size = 3) +
geom_text_repel(aes(Genes, Size, label = Short_name, size = 4, color = Color),
size = 6,
point.padding = 0.5) +
labs(x = "Number of genes (K)",
y = "Genome size (Mbp)") +
theme_bw() +
theme_few() +
theme(axis.text=element_text(size = 5), axis.title=element_text(size = 5))
ggplot(data) +
geom_point(aes(Genes, Size, color = Color), size = 3) +
geom_text_repel(aes(Genes, Size, label = Short_name, size = 4, color = Color),
size = 6,
point.padding = 0.5) +
labs(x = "Number of genes (K)",
y = "Genome size (Mbp)") +
theme_bw() +
theme_few() +
theme(axis.text=element_text(size = 12), axis.title=element_text(size = 12)) +
theme(legend.position="none")
ggplot(data) +
geom_point(aes(Genes, Size, color = Color), size = 3) +
geom_text_repel(aes(Genes, Size, label = Short_name, size = 4, color = Color),
size = 6,
point.padding = 0.5) +
labs(x = "Number of genes (K)",
y = "Genome size (Mbp)") +
theme_bw() +
theme_few() +
theme(axis.text=element_text(size = 14), axis.title=element_text(size = 14)) +
theme(legend.position="none")
ggplot(data) +
geom_point(aes(Genes, Size, color = Color), size = 3) +
geom_text_repel(aes(Genes, Size, label = Short_name, size = 4, color = Color),
size = 6,
point.padding = 0.5) +
labs(x = "Number of genes (K)",
y = "Genome size (Mbp)") +
theme_bw() +
theme_few() +
theme(axis.text=element_text(size = 16), axis.title=element_text(size = 16)) +
theme(legend.position="none")
ggplot(data) +
geom_point(aes(Genes, Size, color = Color), size = 3) +
geom_text_repel(aes(Genes, Size, label = Short_name, size = 4, color = Color),
size = 6,
point.padding = 0.6) +
labs(x = "Number of genes (K)",
y = "Genome size (Mbp)") +
theme_bw() +
theme_few() +
theme(axis.text=element_text(size = 16), axis.title=element_text(size = 16)) +
theme(legend.position="none")
ggplot(data) +
geom_point(aes(Genes, Size, color = Color), size = 4) +
geom_text_repel(aes(Genes, Size, label = Short_name, size = 4, color = Color),
size = 6,
point.padding = 0.6) +
labs(x = "Number of genes (K)",
y = "Genome size (Mbp)") +
theme_bw() +
theme_few() +
theme(axis.text=element_text(size = 16), axis.title=element_text(size = 16)) +
theme(legend.position="none")
ggplot(data) +
geom_point(aes(Genes, Size, color = Color), size = 3.5) +
geom_text_repel(aes(Genes, Size, label = Short_name, size = 4, color = Color),
size = 6,
point.padding = 0.6) +
labs(x = "Number of genes (K)",
y = "Genome size (Mbp)") +
theme_bw() +
theme_few() +
theme(axis.text=element_text(size = 16), axis.title=element_text(size = 16)) +
theme(legend.position="none")
ggplot(data) +
geom_point(aes(Genes, Size, color = Color), size = 3.5) +
geom_text_repel(aes(Genes, Size, label = Short_name, size = 4, color = Color),
size = 6,
point.padding = 0.6) +
labs(x = "Number of genes (K)",
y = "Genome size (Mbp)") +
theme(axis.text=element_text(size = 16), axis.title=element_text(size = 16)) +
theme(legend.position="none")
ggplot(data) +
geom_point(aes(Genes, Size, color = Color), size = 3.5) +
geom_text_repel(aes(Genes, Size, label = Short_name, size = 4, color = Color),
size = 6,
point.padding = 0.6) +
labs(x = "Number of genes (K)",
y = "Genome size (Mbp)") +
theme_bw() +
theme_few() +
theme(axis.text=element_text(size = 16), axis.title=element_text(size = 16)) +
theme(legend.position="none")
install.packages("fulltext")
library(fulltext)
res <- ft_search(
query = 'biology',
from = 'plos',
limit = 10,
plosopts = list(
fq = list(
'doc_type:full',
'-article_type:correction',
'-article_type:viewpoints'
)
)
)
res
devtools::install_github('dmlc/xgboost',subdir='R-package')
# Library ---------------------------------------------------------
library(tidyverse)
library(googlesheets)
library(maps)
library(readxl)
# Library ---------------------------------------------------------
library(tidyverse)
library(googlesheets)
library(maps)
library(readxl)
url <-
"https://docs.google.com/spreadsheets/d/e/2PACX-1vQoRxmeOvIAQSqOtr2DMOBW_P4idYKzRmVtT7lpqwoH7ZWAonRwOcKR2GqE-yqUOhb5Ac_RUs4MBICe/pub?output=xlsx"
destfile <- "data.xlsx"
curl::curl_download(url, destfile)
locations <- read_xlsx(destfile, sheet = 'locations')
tail(locations)
locations <- locations %>%
mutate(long_round = round(lon, 0),
lat_round = round(lat, 0))
tail(locations %>% select(-status))
# Generate a data frame with all dots ------------------------------
lat <- data_frame(lat = seq(-90, 90, by = 1))
long <- data_frame(long = seq(-180, 180, by = 1))
dots <- lat %>%
merge(long, all = TRUE)
## Only include dots that are within borders. Also, exclude lakes.
dots <- dots %>%
mutate(country = map.where('world', long, lat),
lakes = map.where('lakes', long, lat)) %>%
filter(!is.na(country) & is.na(lakes)) %>%
select(-lakes)
head(dots)
theme <- theme_void() +
theme(
panel.background = element_rect(fill = "grey20"),
plot.background = element_rect(fill = "grey20"),
plot.title = element_text(
face = "bold",
colour = "#3C3C3C",
size = 16
),
plot.subtitle = element_text(colour = "#3C3C3C", size = 12),
plot.caption = element_text(colour = "#3C3C3C", size = 10),
plot.margin = unit(c(0, 0, 0, 0), "cm")
)
plot <- ggplot() +
#base layer of map dots
geom_point(data = dots,
aes(x = long, y = lat),
col = "grey30",
size = 0.4) +
#plot all the places I've been to
geom_point(
data = locations,
aes(x = long_round, y = lat_round),
color = "grey80",
size = 0.5
) +
#plot all the places I lived in, using red
geom_point(
data = locations %>%
filter(status == 'lived'),
aes(x = long_round, y = lat_round),
color = "red",
size = 0.5
) +
#an extra layer of halo around the places I lived in
geom_point(
data = locations %>%
filter(status == 'lived'),
aes(x = long_round, y = lat_round),
color = "red",
size = 6,
alpha = 0.4
) +
#adding my theme
theme
plot
plot + scale_y_continuous(limits = c(10, 70), expand = c(0, 0)) +
scale_x_continuous(limits = c(-150, 90), expand = c(0, 0)) +
plot + scale_y_continuous(limits = c(10, 70), expand = c(0, 0)) +
scale_x_continuous(limits = c(-150, 90), expand = c(0, 0))
plot + scale_y_continuous(limits = c(10, 70), expand = c(0, 0)) +
scale_x_continuous(limits = c(-150, 90), expand = c(0, 0))
plot + scale_y_continuous(limits = c(0, 70), expand = c(0, 0)) +
scale_x_continuous(limits = c(-150, 90), expand = c(0, 0))
plot + scale_y_continuous(limits = c(-150, 70), expand = c(0, 0)) +
scale_x_continuous(limits = c(-150, 90), expand = c(0, 0))
plot + scale_y_continuous(limits = c(-10, 70), expand = c(0, 0)) +
scale_x_continuous(limits = c(-150, 90), expand = c(0, 0))
plot + scale_y_continuous(limits = c(-100, 70), expand = c(0, 0)) +
scale_x_continuous(limits = c(-150, 90), expand = c(0, 0))
plot + scale_y_continuous(limits = c(-60, 70), expand = c(0, 0)) +
scale_x_continuous(limits = c(-150, 90), expand = c(0, 0))
plot
tail(locations)
library(pathview)
# load the biomartr package
library(biomartr)
# load the biomartr package
source("https://bioconductor.org/biocLite.R")
biocLite("biomaRt")
library(biomartr)
# exp1
exp1.data <- t(data.summarized)[2,]
head(exp1.data)
setwd("/Users/shkao/GitHub/TRBL/LD")
data <- read.delim("testwithKO.txt", header = TRUE)
colnames(data)[1] <- "KO"
data.summarized <- group_by(data, KO) %>% summarise_all(funs(mean)) %>% as.data.frame
row.names(data.summarized) <- data.summarized$KO
head(data.summarized)
library(pathview)
library(gage)
library(dplyr)
setwd("/Users/shkao/GitHub/TRBL/LD")
data <- read.delim("testwithKO.txt", header = TRUE)
colnames(data)[1] <- "KO"
data.summarized <- group_by(data, KO) %>% summarise_all(funs(mean)) %>% as.data.frame
row.names(data.summarized) <- data.summarized$KO
head(data.summarized)
# exp1
exp1.data <- t(data.summarized)[2,]
head(exp1.data)
# exp1
exp1.mean <- t(data.summarized)[2,]
# exp1
exp1.mean <- t(data.summarized)[2,]
head(exp1.mean)
pv.out <-
pathview(
gene.data = exp1.mean,
pathway.id = "01100",
species = "ko",
out.suffix = "exp1"
)
# exp1
exp1.mean <- t(data.summarized)[2,]
head(exp1.mean)
pv.out <-
pathview(
gene.data = exp1.mean,
pathway.id = "00140",
species = "ko",
out.suffix = "exp1"
)
warning()
setwd("/Users/shkao/GitHub/TRBL/LD")
data <- read.delim("testwithKO_re.txt", header = TRUE)
colnames(data)[1] <- "KO"
data.summarized <- group_by(data, KO) %>% summarise_all(funs(mean)) %>% as.data.frame
row.names(data.summarized) <- data.summarized$KO
head(data.summarized)
setwd("/Users/shkao/GitHub/TRBL/LD")
data <- read.delim("testwithKO.txt", header = TRUE)
colnames(data)[1] <- "KO"
data.summarized <- group_by(data, KO) %>% summarise_all(funs(mean)) %>% as.data.frame
row.names(data.summarized) <- data.summarized$KO
head(data.summarized)
library(stringr)
data.summarized$KO
data.summarized$KO %>% str_replace("K")
data.summarized$KO %>% str_replace("K", "")
setwd("/Users/shkao/GitHub/TRBL/LD")
data <- read.delim("testwithKO.txt", header = TRUE)
colnames(data)[1] <- "KO"
data.summarized <- group_by(data, KO) %>% summarise_all(funs(mean)) %>% as.data.frame
row.names(data.summarized) <- data.summarized$KO %>% str_replace("K", "")
head(data.summarized)
# exp1
exp1.mean <- t(data.summarized)[2,]
head(exp1.mean)
pv.out <-
pathview(
gene.data = exp1.mean,
pathway.id = "00140",
species = "ko",
out.suffix = "exp1"
)
data.summarized <- group_by(data, KO) %>% summarise_all(funs(mean))
head(data.summarized)
data.summarized <- group_by(data, KO) %>% summarise_all(funs(mean)) %>% as.data.frame
string(data.summarized)
data.summarized <- group_by(data, KO) %>% summarise_all(funs(mean)) %>% as.data.frame
str(data.summarized)
data.summarized <- group_by(data, KO) %>% summarise_all(funs(mean)) %>% as.data.frame
row.names(data.summarized) <- data.summarized$KO %>% str_replace("K", "")
head(data.summarized)
# exp1
exp1.mean <- t(data.summarized)[2,]
head(exp1.mean)
str(exp1.mean)
head(exp1.mean)
# exp1
exp1.mean <- as.numeric(t(data.summarized)[2,])
head(exp1.mean)
str(exp1.mean)
data.summarized)[2,]
data.summarized[2,]
data.summarized[,2]
head(data.summarized)
# exp1
exp1.mean <- as.numeric(data.summarized.exp1)
# exp1
exp1.mean <- as.numeric(data.summarized$exp1)
head(exp1.mean)
row.names(exp1.mean) <- data.summarized$KO
head(data.summarized)
row.names(exp1.mean) <-
data.summarized$KO
row.names(exp1.mean) <-
data.summarized$KO
row.names(exp1.mean) <-
head(data.summarized)
head(data.summarized)
data.summarized$KO
# exp1
exp1.mean <- as.dataframe(as.numeric(data.summarized$exp1))
# exp1
exp1.mean <- as.data.frame(as.numeric(data.summarized$exp1))
data.summarized$KO
# exp1
exp1.mean <- as.data.frame(data.summarized$KO = as.numeric(data.summarized$exp1))
exp1.mean <- as.numeric(t(data.summarized)[2,])
head(exp1.mean)
str(exp1.mean)
# exp1
data.summarized %>% select(exp1)
# exp1
exp1.mean <- data.summarized %>% select(exp1)
head(exp1.mean)
# exp1
exp1.mean <- t(data.summarized %>% select(exp1))
head(exp1.mean)
str(exp1.mean)
# exp1
exp1.mean <- t(data.summarized %>% select(exp1))
# exp1
exp1.mean <- t(data.summarized %>% select(exp1))
pv.out <-
pathview(
gene.data = exp1.mean,
pathway.id = "00140",
species = "ko",
out.suffix = "exp1"
)
warning()
warnings()
warnings()
pathview?
pathview?
?pathview
?pathview
data.summarized <- group_by(data, KO) %>% summarise_all(funs(mean)) %>% as.data.frame
row.names(data.summarized) <- data.summarized$KO
#%>% str_replace("K", "")
head(data.summarized)
# exp1
exp1.mean <- t(data.summarized %>% select(exp1))
pv.out <-
pathview(
gene.data = exp1.mean,
pathway.id = "00140",
species = "ko",
out.suffix = "exp1"
)
head(exp1.mean)
row.names(data.summarized) <- data.summarized$KO %>% str_replace("K", "")
head(data.summarized)
# exp1
exp1.mean <- t(data.summarized %>% select(exp1))
head(exp1.mean)
# exp1
exp1.mean <- data.summarized %>% select(exp1)
head(exp1.mean)
pv.out <-
pathview(
gene.data = exp1.mean,
pathway.id = "00140",
species = "ko",
out.suffix = "exp1"
)
library(pathview)
library(gage)
library(dplyr)
library(stringr)
setwd("/Users/shkao/GitHub/TRBL/LD")
data <- read.delim("testwithKO.txt", header = TRUE)
head(data)
data.summarized <- group_by(data, KO) %>% summarise_all(funs(mean)) %>% as.data.frame
colnames(data)[1] <- "KO"
head(data)
data.summarized <- group_by(data, KO) %>% summarise_all(funs(mean)) %>% as.data.frame
head(data.summarized)
row.names(data.summarized) <- data.summarized$KO
#%>% str_replace("K", "")
head(data.summarized)
# exp1
exp1.mean <- data.summarized %>% select(exp1)
#%>% str_replace("K", "")
head(data.summarized)
#%>% str_replace("K", "")
head(data.summarized[,-1])
data.summarized <- group_by(data, KO) %>% summarise_all(funs(mean)) %>% as.data.frame
head(data.summarized)
row.names(data.summarized) <- data.summarized$KO
pv.out <-
pathview(
gene.data = data.summarized[,-1],
pathway.id = "00140",
species = "ko",
multi.state = T,
same.layer = T,
out.suffix = "exp1"
)
pv.out <-
pathview(
gene.data = data.summarized[,-1],
pathway.id = "00140",
species = "ko",
multi.state = T,
same.layer = T,
out.suffix = "exp"
)
library(pathview)
library(gage)
library(dplyr)
library(stringr)
setwd("/Users/shkao/GitHub/TRBL/LD")
data <- read.delim("testwithKO.txt", header = TRUE)
colnames(data)[1] <- "KO"
data.summarized <- group_by(data, KO) %>% summarise_all(funs(mean)) %>% as.data.frame
row.names(data.summarized) <- data.summarized$KO
pv.out <-
pathview(
gene.data = data.summarized[,-1],
pathway.id = "00140",
species = "ko",
multi.state = T,
same.layer = T,
out.suffix = "exp"
)
rm(list = ls())
library(pathview)
library(dplyr)
setwd("/Users/shkao/GitHub/TRBL/LD")
data <- read.delim("testwithKO.txt", header = TRUE)
colnames(data)[1] <- "KO"
data.summarized <- group_by(data, KO) %>% summarise_all(funs(mean)) %>% as.data.frame
row.names(data.summarized) <- data.summarized$KO
pv.out <-
pathview(
gene.data = data.summarized[,-1],
pathway.id = "00140",
species = "ko",
multi.state = T,
same.layer = T,
out.suffix = "exp"
)
pv.out <-
pathview(
gene.data = data.summarized[,-1],
pathway.id = "00140",
species = "ko",
kegg.native = T,
multi.state = T,
same.layer = T,
out.suffix = "exp"
)
